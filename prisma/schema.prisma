// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id        String    @id @default(cuid())
  email     String 
  orderID  String @unique
  paymentInfo String?  
  user      User           @relation(fields: [email], references: [email])
  products  ProductOrder[]
  address   String
  amount    Float
  status    String    @default("Pending")
  deliveryStatus String @default("unshipped")
  transactionID String?
  city      String    @default("Unknown")
  state     String    @default("Unknown")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ProductOrder {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)
  price     Float
  size      String
  color     String
}

model Product {
  id           String   @id @default(cuid())
  title        String
  product      String  
  desc         String
  img          String
  category     String
  size         String  
  color        String  
  price        Float
  availableQty Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  productOrders ProductOrder[]
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  mobile    String  
  address   String  @default("Unknown")
  city      String  @default("Unknown")
  state     String  @default("Unknown")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}
